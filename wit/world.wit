package mus-uc:devtools@0.1.0;

/// Chrome CSS Manager interface for loading CSS into Firefox chrome context
interface css-manager {
    /// Result type for operations that may fail
    variant result-string {
        ok(string),
        err(string),
    }

    variant result-bool {
        ok(bool),
        err(string),
    }

    variant result-list {
        ok(list<string>),
        err(string),
    }

    /// Initialize the Chrome CSS manager
    initialize: func() -> result-string;

    /// Load CSS content into Firefox chrome context
    /// Returns the sheet ID on success
    load-css: func(content: string, id: option<string>) -> result-string;

    /// Unload CSS by ID
    unload-css: func(id: string) -> result-bool;

    /// Clear all loaded CSS sheets
    clear-all: func() -> result-string;

    /// List all loaded CSS sheet IDs
    list-loaded: func() -> result-list;
}

/// Marionette connection interface
interface marionette {
    variant result-string {
        ok(string),
        err(string),
    }

    /// Connect to Marionette server
    connect: func(host: string, port: u16) -> result-string;

    /// Execute JavaScript in chrome context
    execute-script: func(script: string, args: option<string>) -> result-string;
}

/// Screenshot interface
interface screenshot {
    variant result-bytes {
        ok(list<u8>),
        err(string),
    }

    /// Take a screenshot
    /// selector: Optional CSS selector to screenshot specific element
    take-screenshot: func(selector: option<string>) -> result-bytes;
}

world mus-uc-component {
    export css-manager;
    export marionette;
    export screenshot;
}
